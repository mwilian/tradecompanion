Imports System, System.Data
Imports System.Data.SqlClient
Imports System.Data.OleDb
Imports System.Data.Odbc
Imports System.Configuration

Public Class ClsProviderFactory

#Region "Variables of the Class"
    Private lInteger As Integer
    Private lErrorMessage As String
    Private lInfoMessage As String
#End Region

#Region "Properties of the Class"
    'Property will return the information message generated by the class
    Protected ReadOnly Property GetInfoMessageFromClass() As String
        Get
            GetInfoMessageFromClass = lInfoMessage
        End Get
    End Property
#End Region

#Region "Public Or Protected Functions of the class"
    'Returns the Connection Type According to Configration File"
    Public Overridable Function GetConnection() As IDbConnection
        If CheckKeyInConfigrationFile("ConnectionType") = False Then
            Exit Function
        End If

        Select Case ConfigurationSettings.AppSettings("ConnectionType")
            Case "SQL"
                GetConnection = New SqlConnection
            Case "OLEDB"
                GetConnection = New OleDbConnection
            Case "ODBC"
                GetConnection = New OdbcConnection
            Case Else
                lInfoMessage = "Connection type not found, it must be SQL, OLEDB or ODBC."
        End Select
    End Function

    'Returns the Connection String from configration files
    Protected Overridable Function GetConnectionString() As String
        If CheckKeyInConfigrationFile("DatabaseConnectionString") = False Then
            Exit Function
        End If

        GetConnectionString = ConfigurationSettings.AppSettings("DatabaseConnectionString")
    End Function

    Protected Overridable Function GetAdapterType() As IDbDataAdapter
        If CheckKeyInConfigrationFile("ConnectionType") = False Then
            Exit Function
        End If

        Select Case ConfigurationSettings.AppSettings("ConnectionType")
            Case "SQL"
                GetAdapterType = New SqlDataAdapter
            Case "OLEDB"
                GetAdapterType = New OleDbDataAdapter
            Case "ODBC"
                GetAdapterType = New OdbcDataAdapter
            Case Else
                lInfoMessage = "Adapter type not found, it must be SQL, OLEDB or ODBC."
        End Select
    End Function

    Public Overridable Function GetCommandType() As IDbCommand
        If CheckKeyInConfigrationFile("ConnectionType") = False Then
            Exit Function
        End If

        Select Case ConfigurationSettings.AppSettings("ConnectionType")
            Case "SQL"
                GetCommandType = New SqlCommand
            Case "OLEDB"
                GetCommandType = New OleDbCommand
            Case "ODBC"
                GetCommandType = New OdbcCommand
            Case Else
                lInfoMessage = "Adapter type not found, it must be SQL, OLEDB or ODBC."
        End Select
    End Function
#End Region

#Region "Private Functions Of the Class"
    'Checks the key information exists in configration file
    Private Function CheckKeyInConfigrationFile(ByVal argKey As String) As Boolean
        For lInteger = 0 To ConfigurationSettings.AppSettings.Count - 1
            If Trim(UCase(argKey)) = Trim(UCase(ConfigurationSettings.AppSettings.GetKey(lInteger))) Then
                CheckKeyInConfigrationFile = True
                Exit Function
            End If
        Next
        lInfoMessage = "Unable to find key " & argKey & " in configration file."
    End Function
#End Region

End Class
