//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace AdminTC.WSScalper {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServicesScalperSoap", Namespace="http://tempuri.org/")]
    public partial class WebServicesScalper : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidatePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ForgotPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoggedinOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersDSOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOrderReturnDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOrderRowsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrdersDSOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrdersFromQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsEmailIDExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsLoginIDExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckDependencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPLTradeDSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPLTradeDSFromQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidatePasswordVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmailIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPIPSFromPLTradeQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGraphDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersDSFromQueryOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebServicesScalper() {
            this.Url = global::AdminTC.Properties.Settings.Default.AdminTC_WSScalper_WebServicesScalper;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateUserCompletedEventHandler CreateUserCompleted;
        
        /// <remarks/>
        public event ModifyPasswordCompletedEventHandler ModifyPasswordCompleted;
        
        /// <remarks/>
        public event ValidatePasswordCompletedEventHandler ValidatePasswordCompleted;
        
        /// <remarks/>
        public event ForgotPasswordCompletedEventHandler ForgotPasswordCompleted;
        
        /// <remarks/>
        public event LoggedinCompletedEventHandler LoggedinCompleted;
        
        /// <remarks/>
        public event GetUsersDSCompletedEventHandler GetUsersDSCompleted;
        
        /// <remarks/>
        public event EditUsersCompletedEventHandler EditUsersCompleted;
        
        /// <remarks/>
        public event AddOrderReturnDateCompletedEventHandler AddOrderReturnDateCompleted;
        
        /// <remarks/>
        public event AddOrderCompletedEventHandler AddOrderCompleted;
        
        /// <remarks/>
        public event AddOrdersCompletedEventHandler AddOrdersCompleted;
        
        /// <remarks/>
        public event AddOrderRowsCompletedEventHandler AddOrderRowsCompleted;
        
        /// <remarks/>
        public event GetOrdersDSCompletedEventHandler GetOrdersDSCompleted;
        
        /// <remarks/>
        public event AddUserCompletedEventHandler AddUserCompleted;
        
        /// <remarks/>
        public event GetOrdersFromQueryCompletedEventHandler GetOrdersFromQueryCompleted;
        
        /// <remarks/>
        public event IsEmailIDExistCompletedEventHandler IsEmailIDExistCompleted;
        
        /// <remarks/>
        public event IsLoginIDExistCompletedEventHandler IsLoginIDExistCompleted;
        
        /// <remarks/>
        public event DeleteUserCompletedEventHandler DeleteUserCompleted;
        
        /// <remarks/>
        public event CheckDependencyCompletedEventHandler CheckDependencyCompleted;
        
        /// <remarks/>
        public event GetPLTradeDSCompletedEventHandler GetPLTradeDSCompleted;
        
        /// <remarks/>
        public event GetPLTradeDSFromQueryCompletedEventHandler GetPLTradeDSFromQueryCompleted;
        
        /// <remarks/>
        public event ValidatePasswordVersionCompletedEventHandler ValidatePasswordVersionCompleted;
        
        /// <remarks/>
        public event GetEmailIDCompletedEventHandler GetEmailIDCompleted;
        
        /// <remarks/>
        public event GetPIPSFromPLTradeQueryCompletedEventHandler GetPIPSFromPLTradeQueryCompleted;
        
        /// <remarks/>
        public event GetGraphDataCompletedEventHandler GetGraphDataCompleted;
        
        /// <remarks/>
        public event GetUsersDSFromQueryCompletedEventHandler GetUsersDSFromQueryCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateUser(UserRow userRow) {
            object[] results = this.Invoke("CreateUser", new object[] {
                        userRow});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateUserAsync(UserRow userRow) {
            this.CreateUserAsync(userRow, null);
        }
        
        /// <remarks/>
        public void CreateUserAsync(UserRow userRow, object userState) {
            if ((this.CreateUserOperationCompleted == null)) {
                this.CreateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUserOperationCompleted);
            }
            this.InvokeAsync("CreateUser", new object[] {
                        userRow}, this.CreateUserOperationCompleted, userState);
        }
        
        private void OnCreateUserOperationCompleted(object arg) {
            if ((this.CreateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUserCompleted(this, new CreateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ModifyPassword(string loginid, string oldpassword, string newpassword) {
            object[] results = this.Invoke("ModifyPassword", new object[] {
                        loginid,
                        oldpassword,
                        newpassword});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyPasswordAsync(string loginid, string oldpassword, string newpassword) {
            this.ModifyPasswordAsync(loginid, oldpassword, newpassword, null);
        }
        
        /// <remarks/>
        public void ModifyPasswordAsync(string loginid, string oldpassword, string newpassword, object userState) {
            if ((this.ModifyPasswordOperationCompleted == null)) {
                this.ModifyPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyPasswordOperationCompleted);
            }
            this.InvokeAsync("ModifyPassword", new object[] {
                        loginid,
                        oldpassword,
                        newpassword}, this.ModifyPasswordOperationCompleted, userState);
        }
        
        private void OnModifyPasswordOperationCompleted(object arg) {
            if ((this.ModifyPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyPasswordCompleted(this, new ModifyPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidatePassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ValidatePassword(string loginid, string password) {
            object[] results = this.Invoke("ValidatePassword", new object[] {
                        loginid,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ValidatePasswordAsync(string loginid, string password) {
            this.ValidatePasswordAsync(loginid, password, null);
        }
        
        /// <remarks/>
        public void ValidatePasswordAsync(string loginid, string password, object userState) {
            if ((this.ValidatePasswordOperationCompleted == null)) {
                this.ValidatePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidatePasswordOperationCompleted);
            }
            this.InvokeAsync("ValidatePassword", new object[] {
                        loginid,
                        password}, this.ValidatePasswordOperationCompleted, userState);
        }
        
        private void OnValidatePasswordOperationCompleted(object arg) {
            if ((this.ValidatePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidatePasswordCompleted(this, new ValidatePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ForgotPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ForgotPassword(string loginid, string email) {
            object[] results = this.Invoke("ForgotPassword", new object[] {
                        loginid,
                        email});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ForgotPasswordAsync(string loginid, string email) {
            this.ForgotPasswordAsync(loginid, email, null);
        }
        
        /// <remarks/>
        public void ForgotPasswordAsync(string loginid, string email, object userState) {
            if ((this.ForgotPasswordOperationCompleted == null)) {
                this.ForgotPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnForgotPasswordOperationCompleted);
            }
            this.InvokeAsync("ForgotPassword", new object[] {
                        loginid,
                        email}, this.ForgotPasswordOperationCompleted, userState);
        }
        
        private void OnForgotPasswordOperationCompleted(object arg) {
            if ((this.ForgotPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ForgotPasswordCompleted(this, new ForgotPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Loggedin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Loggedin(string loginid, bool status) {
            object[] results = this.Invoke("Loggedin", new object[] {
                        loginid,
                        status});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LoggedinAsync(string loginid, bool status) {
            this.LoggedinAsync(loginid, status, null);
        }
        
        /// <remarks/>
        public void LoggedinAsync(string loginid, bool status, object userState) {
            if ((this.LoggedinOperationCompleted == null)) {
                this.LoggedinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoggedinOperationCompleted);
            }
            this.InvokeAsync("Loggedin", new object[] {
                        loginid,
                        status}, this.LoggedinOperationCompleted, userState);
        }
        
        private void OnLoggedinOperationCompleted(object arg) {
            if ((this.LoggedinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoggedinCompleted(this, new LoggedinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUsersDS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUsersDS() {
            object[] results = this.Invoke("GetUsersDS", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersDSAsync() {
            this.GetUsersDSAsync(null);
        }
        
        /// <remarks/>
        public void GetUsersDSAsync(object userState) {
            if ((this.GetUsersDSOperationCompleted == null)) {
                this.GetUsersDSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersDSOperationCompleted);
            }
            this.InvokeAsync("GetUsersDS", new object[0], this.GetUsersDSOperationCompleted, userState);
        }
        
        private void OnGetUsersDSOperationCompleted(object arg) {
            if ((this.GetUsersDSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersDSCompleted(this, new GetUsersDSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EditUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int EditUsers(UserRow userRow) {
            object[] results = this.Invoke("EditUsers", new object[] {
                        userRow});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void EditUsersAsync(UserRow userRow) {
            this.EditUsersAsync(userRow, null);
        }
        
        /// <remarks/>
        public void EditUsersAsync(UserRow userRow, object userState) {
            if ((this.EditUsersOperationCompleted == null)) {
                this.EditUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditUsersOperationCompleted);
            }
            this.InvokeAsync("EditUsers", new object[] {
                        userRow}, this.EditUsersOperationCompleted, userState);
        }
        
        private void OnEditUsersOperationCompleted(object arg) {
            if ((this.EditUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditUsersCompleted(this, new EditUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddOrderReturnDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime AddOrderReturnDate(OrderRow orderRow) {
            object[] results = this.Invoke("AddOrderReturnDate", new object[] {
                        orderRow});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void AddOrderReturnDateAsync(OrderRow orderRow) {
            this.AddOrderReturnDateAsync(orderRow, null);
        }
        
        /// <remarks/>
        public void AddOrderReturnDateAsync(OrderRow orderRow, object userState) {
            if ((this.AddOrderReturnDateOperationCompleted == null)) {
                this.AddOrderReturnDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOrderReturnDateOperationCompleted);
            }
            this.InvokeAsync("AddOrderReturnDate", new object[] {
                        orderRow}, this.AddOrderReturnDateOperationCompleted, userState);
        }
        
        private void OnAddOrderReturnDateOperationCompleted(object arg) {
            if ((this.AddOrderReturnDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOrderReturnDateCompleted(this, new AddOrderReturnDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddOrder(OrderRow orderRow) {
            object[] results = this.Invoke("AddOrder", new object[] {
                        orderRow});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddOrderAsync(OrderRow orderRow) {
            this.AddOrderAsync(orderRow, null);
        }
        
        /// <remarks/>
        public void AddOrderAsync(OrderRow orderRow, object userState) {
            if ((this.AddOrderOperationCompleted == null)) {
                this.AddOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOrderOperationCompleted);
            }
            this.InvokeAsync("AddOrder", new object[] {
                        orderRow}, this.AddOrderOperationCompleted, userState);
        }
        
        private void OnAddOrderOperationCompleted(object arg) {
            if ((this.AddOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOrderCompleted(this, new AddOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddOrders", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddOrders(System.Data.DataSet dsUser, string loginID, string currenExID) {
            object[] results = this.Invoke("AddOrders", new object[] {
                        dsUser,
                        loginID,
                        currenExID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddOrdersAsync(System.Data.DataSet dsUser, string loginID, string currenExID) {
            this.AddOrdersAsync(dsUser, loginID, currenExID, null);
        }
        
        /// <remarks/>
        public void AddOrdersAsync(System.Data.DataSet dsUser, string loginID, string currenExID, object userState) {
            if ((this.AddOrdersOperationCompleted == null)) {
                this.AddOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOrdersOperationCompleted);
            }
            this.InvokeAsync("AddOrders", new object[] {
                        dsUser,
                        loginID,
                        currenExID}, this.AddOrdersOperationCompleted, userState);
        }
        
        private void OnAddOrdersOperationCompleted(object arg) {
            if ((this.AddOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOrdersCompleted(this, new AddOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddOrderRows", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddOrderRows(OrderRow[] orderRows) {
            object[] results = this.Invoke("AddOrderRows", new object[] {
                        orderRows});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddOrderRowsAsync(OrderRow[] orderRows) {
            this.AddOrderRowsAsync(orderRows, null);
        }
        
        /// <remarks/>
        public void AddOrderRowsAsync(OrderRow[] orderRows, object userState) {
            if ((this.AddOrderRowsOperationCompleted == null)) {
                this.AddOrderRowsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOrderRowsOperationCompleted);
            }
            this.InvokeAsync("AddOrderRows", new object[] {
                        orderRows}, this.AddOrderRowsOperationCompleted, userState);
        }
        
        private void OnAddOrderRowsOperationCompleted(object arg) {
            if ((this.AddOrderRowsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOrderRowsCompleted(this, new AddOrderRowsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrdersDS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOrdersDS() {
            object[] results = this.Invoke("GetOrdersDS", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrdersDSAsync() {
            this.GetOrdersDSAsync(null);
        }
        
        /// <remarks/>
        public void GetOrdersDSAsync(object userState) {
            if ((this.GetOrdersDSOperationCompleted == null)) {
                this.GetOrdersDSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrdersDSOperationCompleted);
            }
            this.InvokeAsync("GetOrdersDS", new object[0], this.GetOrdersDSOperationCompleted, userState);
        }
        
        private void OnGetOrdersDSOperationCompleted(object arg) {
            if ((this.GetOrdersDSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrdersDSCompleted(this, new GetOrdersDSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddUser(string loginId, string userName, string emailId, string phoneNo, string address, string city, string country) {
            object[] results = this.Invoke("AddUser", new object[] {
                        loginId,
                        userName,
                        emailId,
                        phoneNo,
                        address,
                        city,
                        country});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserAsync(string loginId, string userName, string emailId, string phoneNo, string address, string city, string country) {
            this.AddUserAsync(loginId, userName, emailId, phoneNo, address, city, country, null);
        }
        
        /// <remarks/>
        public void AddUserAsync(string loginId, string userName, string emailId, string phoneNo, string address, string city, string country, object userState) {
            if ((this.AddUserOperationCompleted == null)) {
                this.AddUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserOperationCompleted);
            }
            this.InvokeAsync("AddUser", new object[] {
                        loginId,
                        userName,
                        emailId,
                        phoneNo,
                        address,
                        city,
                        country}, this.AddUserOperationCompleted, userState);
        }
        
        private void OnAddUserOperationCompleted(object arg) {
            if ((this.AddUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserCompleted(this, new AddUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrdersFromQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOrdersFromQuery(string sql) {
            object[] results = this.Invoke("GetOrdersFromQuery", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrdersFromQueryAsync(string sql) {
            this.GetOrdersFromQueryAsync(sql, null);
        }
        
        /// <remarks/>
        public void GetOrdersFromQueryAsync(string sql, object userState) {
            if ((this.GetOrdersFromQueryOperationCompleted == null)) {
                this.GetOrdersFromQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrdersFromQueryOperationCompleted);
            }
            this.InvokeAsync("GetOrdersFromQuery", new object[] {
                        sql}, this.GetOrdersFromQueryOperationCompleted, userState);
        }
        
        private void OnGetOrdersFromQueryOperationCompleted(object arg) {
            if ((this.GetOrdersFromQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrdersFromQueryCompleted(this, new GetOrdersFromQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsEmailIDExist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsEmailIDExist(string emailId) {
            object[] results = this.Invoke("IsEmailIDExist", new object[] {
                        emailId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsEmailIDExistAsync(string emailId) {
            this.IsEmailIDExistAsync(emailId, null);
        }
        
        /// <remarks/>
        public void IsEmailIDExistAsync(string emailId, object userState) {
            if ((this.IsEmailIDExistOperationCompleted == null)) {
                this.IsEmailIDExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsEmailIDExistOperationCompleted);
            }
            this.InvokeAsync("IsEmailIDExist", new object[] {
                        emailId}, this.IsEmailIDExistOperationCompleted, userState);
        }
        
        private void OnIsEmailIDExistOperationCompleted(object arg) {
            if ((this.IsEmailIDExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsEmailIDExistCompleted(this, new IsEmailIDExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsLoginIDExist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsLoginIDExist(string loginId) {
            object[] results = this.Invoke("IsLoginIDExist", new object[] {
                        loginId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsLoginIDExistAsync(string loginId) {
            this.IsLoginIDExistAsync(loginId, null);
        }
        
        /// <remarks/>
        public void IsLoginIDExistAsync(string loginId, object userState) {
            if ((this.IsLoginIDExistOperationCompleted == null)) {
                this.IsLoginIDExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsLoginIDExistOperationCompleted);
            }
            this.InvokeAsync("IsLoginIDExist", new object[] {
                        loginId}, this.IsLoginIDExistOperationCompleted, userState);
        }
        
        private void OnIsLoginIDExistOperationCompleted(object arg) {
            if ((this.IsLoginIDExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsLoginIDExistCompleted(this, new IsLoginIDExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteUser(int userId) {
            object[] results = this.Invoke("DeleteUser", new object[] {
                        userId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserAsync(int userId) {
            this.DeleteUserAsync(userId, null);
        }
        
        /// <remarks/>
        public void DeleteUserAsync(int userId, object userState) {
            if ((this.DeleteUserOperationCompleted == null)) {
                this.DeleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserOperationCompleted);
            }
            this.InvokeAsync("DeleteUser", new object[] {
                        userId}, this.DeleteUserOperationCompleted, userState);
        }
        
        private void OnDeleteUserOperationCompleted(object arg) {
            if ((this.DeleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserCompleted(this, new DeleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckDependency", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckDependency(string tradecompanionId) {
            object[] results = this.Invoke("CheckDependency", new object[] {
                        tradecompanionId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckDependencyAsync(string tradecompanionId) {
            this.CheckDependencyAsync(tradecompanionId, null);
        }
        
        /// <remarks/>
        public void CheckDependencyAsync(string tradecompanionId, object userState) {
            if ((this.CheckDependencyOperationCompleted == null)) {
                this.CheckDependencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckDependencyOperationCompleted);
            }
            this.InvokeAsync("CheckDependency", new object[] {
                        tradecompanionId}, this.CheckDependencyOperationCompleted, userState);
        }
        
        private void OnCheckDependencyOperationCompleted(object arg) {
            if ((this.CheckDependencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckDependencyCompleted(this, new CheckDependencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPLTradeDS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPLTradeDS() {
            object[] results = this.Invoke("GetPLTradeDS", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPLTradeDSAsync() {
            this.GetPLTradeDSAsync(null);
        }
        
        /// <remarks/>
        public void GetPLTradeDSAsync(object userState) {
            if ((this.GetPLTradeDSOperationCompleted == null)) {
                this.GetPLTradeDSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPLTradeDSOperationCompleted);
            }
            this.InvokeAsync("GetPLTradeDS", new object[0], this.GetPLTradeDSOperationCompleted, userState);
        }
        
        private void OnGetPLTradeDSOperationCompleted(object arg) {
            if ((this.GetPLTradeDSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPLTradeDSCompleted(this, new GetPLTradeDSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPLTradeDSFromQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPLTradeDSFromQuery(string sql) {
            object[] results = this.Invoke("GetPLTradeDSFromQuery", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPLTradeDSFromQueryAsync(string sql) {
            this.GetPLTradeDSFromQueryAsync(sql, null);
        }
        
        /// <remarks/>
        public void GetPLTradeDSFromQueryAsync(string sql, object userState) {
            if ((this.GetPLTradeDSFromQueryOperationCompleted == null)) {
                this.GetPLTradeDSFromQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPLTradeDSFromQueryOperationCompleted);
            }
            this.InvokeAsync("GetPLTradeDSFromQuery", new object[] {
                        sql}, this.GetPLTradeDSFromQueryOperationCompleted, userState);
        }
        
        private void OnGetPLTradeDSFromQueryOperationCompleted(object arg) {
            if ((this.GetPLTradeDSFromQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPLTradeDSFromQueryCompleted(this, new GetPLTradeDSFromQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidatePasswordVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ValidatePasswordVersion(string loginid, string password, string version) {
            object[] results = this.Invoke("ValidatePasswordVersion", new object[] {
                        loginid,
                        password,
                        version});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ValidatePasswordVersionAsync(string loginid, string password, string version) {
            this.ValidatePasswordVersionAsync(loginid, password, version, null);
        }
        
        /// <remarks/>
        public void ValidatePasswordVersionAsync(string loginid, string password, string version, object userState) {
            if ((this.ValidatePasswordVersionOperationCompleted == null)) {
                this.ValidatePasswordVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidatePasswordVersionOperationCompleted);
            }
            this.InvokeAsync("ValidatePasswordVersion", new object[] {
                        loginid,
                        password,
                        version}, this.ValidatePasswordVersionOperationCompleted, userState);
        }
        
        private void OnValidatePasswordVersionOperationCompleted(object arg) {
            if ((this.ValidatePasswordVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidatePasswordVersionCompleted(this, new ValidatePasswordVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmailID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEmailID(string loginid) {
            object[] results = this.Invoke("GetEmailID", new object[] {
                        loginid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmailIDAsync(string loginid) {
            this.GetEmailIDAsync(loginid, null);
        }
        
        /// <remarks/>
        public void GetEmailIDAsync(string loginid, object userState) {
            if ((this.GetEmailIDOperationCompleted == null)) {
                this.GetEmailIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmailIDOperationCompleted);
            }
            this.InvokeAsync("GetEmailID", new object[] {
                        loginid}, this.GetEmailIDOperationCompleted, userState);
        }
        
        private void OnGetEmailIDOperationCompleted(object arg) {
            if ((this.GetEmailIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmailIDCompleted(this, new GetEmailIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPIPSFromPLTradeQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPIPSFromPLTradeQuery(string sql, string startDate, string endDate) {
            object[] results = this.Invoke("GetPIPSFromPLTradeQuery", new object[] {
                        sql,
                        startDate,
                        endDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPIPSFromPLTradeQueryAsync(string sql, string startDate, string endDate) {
            this.GetPIPSFromPLTradeQueryAsync(sql, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetPIPSFromPLTradeQueryAsync(string sql, string startDate, string endDate, object userState) {
            if ((this.GetPIPSFromPLTradeQueryOperationCompleted == null)) {
                this.GetPIPSFromPLTradeQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPIPSFromPLTradeQueryOperationCompleted);
            }
            this.InvokeAsync("GetPIPSFromPLTradeQuery", new object[] {
                        sql,
                        startDate,
                        endDate}, this.GetPIPSFromPLTradeQueryOperationCompleted, userState);
        }
        
        private void OnGetPIPSFromPLTradeQueryOperationCompleted(object arg) {
            if ((this.GetPIPSFromPLTradeQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPIPSFromPLTradeQueryCompleted(this, new GetPIPSFromPLTradeQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGraphData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetGraphData(string sql, string startDate, string endDate) {
            object[] results = this.Invoke("GetGraphData", new object[] {
                        sql,
                        startDate,
                        endDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetGraphDataAsync(string sql, string startDate, string endDate) {
            this.GetGraphDataAsync(sql, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetGraphDataAsync(string sql, string startDate, string endDate, object userState) {
            if ((this.GetGraphDataOperationCompleted == null)) {
                this.GetGraphDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGraphDataOperationCompleted);
            }
            this.InvokeAsync("GetGraphData", new object[] {
                        sql,
                        startDate,
                        endDate}, this.GetGraphDataOperationCompleted, userState);
        }
        
        private void OnGetGraphDataOperationCompleted(object arg) {
            if ((this.GetGraphDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGraphDataCompleted(this, new GetGraphDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUsersDSFromQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUsersDSFromQuery(string sql) {
            object[] results = this.Invoke("GetUsersDSFromQuery", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersDSFromQueryAsync(string sql) {
            this.GetUsersDSFromQueryAsync(sql, null);
        }
        
        /// <remarks/>
        public void GetUsersDSFromQueryAsync(string sql, object userState) {
            if ((this.GetUsersDSFromQueryOperationCompleted == null)) {
                this.GetUsersDSFromQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersDSFromQueryOperationCompleted);
            }
            this.InvokeAsync("GetUsersDSFromQuery", new object[] {
                        sql}, this.GetUsersDSFromQueryOperationCompleted, userState);
        }
        
        private void OnGetUsersDSFromQueryOperationCompleted(object arg) {
            if ((this.GetUsersDSFromQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersDSFromQueryCompleted(this, new GetUsersDSFromQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UserRow {
        
        private int idField;
        
        private string loginIdField;
        
        private string usernameField;
        
        private string passwordField;
        
        private string emailIdField;
        
        private string phoneNoField;
        
        private bool activeField;
        
        private bool loggedInField;
        
        private string versionField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string LoginId {
            get {
                return this.loginIdField;
            }
            set {
                this.loginIdField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string EmailId {
            get {
                return this.emailIdField;
            }
            set {
                this.emailIdField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNo {
            get {
                return this.phoneNoField;
            }
            set {
                this.phoneNoField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public bool LoggedIn {
            get {
                return this.loggedInField;
            }
            set {
                this.loggedInField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OrderRow {
        
        private int idField;
        
        private string orderIDField;
        
        private string exchangeField;
        
        private string statusField;
        
        private string symbolField;
        
        private string monthYearField;
        
        private int sideField;
        
        private int quantityField;
        
        private string priceField;
        
        private System.DateTime timeStampField;
        
        private string tradeCurrencyField;
        
        private string execOrderIdField;
        
        private System.DateTime dateIDField;
        
        private string tradeCompanionIDField;
        
        private string currenExIDField;
        
        private System.DateTime dateIDCustomerField;
        
        private string senderIdField;
        
        private double marketPriceField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string OrderID {
            get {
                return this.orderIDField;
            }
            set {
                this.orderIDField = value;
            }
        }
        
        /// <remarks/>
        public string Exchange {
            get {
                return this.exchangeField;
            }
            set {
                this.exchangeField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
            }
        }
        
        /// <remarks/>
        public string MonthYear {
            get {
                return this.monthYearField;
            }
            set {
                this.monthYearField = value;
            }
        }
        
        /// <remarks/>
        public int Side {
            get {
                return this.sideField;
            }
            set {
                this.sideField = value;
            }
        }
        
        /// <remarks/>
        public int Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public string Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        public string TradeCurrency {
            get {
                return this.tradeCurrencyField;
            }
            set {
                this.tradeCurrencyField = value;
            }
        }
        
        /// <remarks/>
        public string ExecOrderId {
            get {
                return this.execOrderIdField;
            }
            set {
                this.execOrderIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateID {
            get {
                return this.dateIDField;
            }
            set {
                this.dateIDField = value;
            }
        }
        
        /// <remarks/>
        public string TradeCompanionID {
            get {
                return this.tradeCompanionIDField;
            }
            set {
                this.tradeCompanionIDField = value;
            }
        }
        
        /// <remarks/>
        public string CurrenExID {
            get {
                return this.currenExIDField;
            }
            set {
                this.currenExIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateIDCustomer {
            get {
                return this.dateIDCustomerField;
            }
            set {
                this.dateIDCustomerField = value;
            }
        }
        
        /// <remarks/>
        public string SenderId {
            get {
                return this.senderIdField;
            }
            set {
                this.senderIdField = value;
            }
        }
        
        /// <remarks/>
        public double MarketPrice {
            get {
                return this.marketPriceField;
            }
            set {
                this.marketPriceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateUserCompletedEventHandler(object sender, CreateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ModifyPasswordCompletedEventHandler(object sender, ModifyPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ValidatePasswordCompletedEventHandler(object sender, ValidatePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidatePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidatePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ForgotPasswordCompletedEventHandler(object sender, ForgotPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ForgotPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ForgotPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LoggedinCompletedEventHandler(object sender, LoggedinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoggedinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoggedinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUsersDSCompletedEventHandler(object sender, GetUsersDSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersDSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersDSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EditUsersCompletedEventHandler(object sender, EditUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddOrderReturnDateCompletedEventHandler(object sender, AddOrderReturnDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOrderReturnDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOrderReturnDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddOrderCompletedEventHandler(object sender, AddOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddOrdersCompletedEventHandler(object sender, AddOrdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddOrderRowsCompletedEventHandler(object sender, AddOrderRowsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOrderRowsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOrderRowsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetOrdersDSCompletedEventHandler(object sender, GetOrdersDSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrdersDSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrdersDSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddUserCompletedEventHandler(object sender, AddUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetOrdersFromQueryCompletedEventHandler(object sender, GetOrdersFromQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrdersFromQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrdersFromQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsEmailIDExistCompletedEventHandler(object sender, IsEmailIDExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsEmailIDExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsEmailIDExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsLoginIDExistCompletedEventHandler(object sender, IsLoginIDExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsLoginIDExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsLoginIDExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteUserCompletedEventHandler(object sender, DeleteUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CheckDependencyCompletedEventHandler(object sender, CheckDependencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckDependencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckDependencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPLTradeDSCompletedEventHandler(object sender, GetPLTradeDSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPLTradeDSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPLTradeDSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPLTradeDSFromQueryCompletedEventHandler(object sender, GetPLTradeDSFromQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPLTradeDSFromQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPLTradeDSFromQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ValidatePasswordVersionCompletedEventHandler(object sender, ValidatePasswordVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidatePasswordVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidatePasswordVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetEmailIDCompletedEventHandler(object sender, GetEmailIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmailIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmailIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPIPSFromPLTradeQueryCompletedEventHandler(object sender, GetPIPSFromPLTradeQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPIPSFromPLTradeQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPIPSFromPLTradeQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetGraphDataCompletedEventHandler(object sender, GetGraphDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGraphDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGraphDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUsersDSFromQueryCompletedEventHandler(object sender, GetUsersDSFromQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersDSFromQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersDSFromQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591